@model MvcAllinRent.Models.PaginatedResult<MvcAllinRent.Models.Rental>

@{
    ViewData["Title"] = "Mes Locations";
}

<div class="page-content">
    <h1 class="page-title">Mon historique de location</h1>

    <!-- Search Form -->
    <form class="d-flex justify-content-center" method="get" action="/rentals">
        <div class="d-flex col-6">
            <input type="text" name="q" class="form-control" placeholder="Rechercher par nom d'article..." value="@Model.SearchCriteria" />
            <button type="submit" class="btn btn-primary">Rechercher</button>
        </div>
    </form>

    <!-- Table -->
    <table class="table table-striped table-bordered">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(model => model.Items.FirstOrDefault().ItemTypeName)</th>
                <th>@Html.DisplayNameFor(model => model.Items.FirstOrDefault().ItemName)</th>
                <th>@Html.DisplayNameFor(model => model.Items.FirstOrDefault().Quantity)</th>
                <th>@Html.DisplayNameFor(model => model.Items.FirstOrDefault().UnitPrice)</th>
                <th>@Html.DisplayNameFor(model => model.Items.FirstOrDefault().StartDate)</th>
                <th>@Html.DisplayNameFor(model => model.Items.FirstOrDefault().DurationDays)</th>
                <th>@Html.DisplayNameFor(model => model.Items.FirstOrDefault().DueDate)</th>
                <th>@Html.DisplayNameFor(model => model.Items.FirstOrDefault().Due)</th>
                <th>@Html.DisplayNameFor(model => model.Items.FirstOrDefault().ReturnDate)</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Items)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.ItemTypeName)</td>
                    <td>@Html.DisplayFor(modelItem => item.ItemName)</td>
                    <td>@Html.DisplayFor(modelItem => item.Quantity)</td>
                    <td>@Html.DisplayFor(modelItem => item.UnitPrice) Ar</td>
                    <td>@Html.DisplayFor(modelItem => item.StartDate)</td>
                    <td>@Html.DisplayFor(modelItem => item.DurationDays) jour(s)</td>
                    <td>@Html.DisplayFor(modelItem => item.DueDate)</td>
                    <td>@Html.DisplayFor(modelItem => item.Due) Ar</td>
                    <td>
                        @if (item.ReturnDate.HasValue)
                        {
                            @item.ReturnDate.Value.ToString("dd MMMM yyyy", new System.Globalization.CultureInfo("fr-FR"))
                        }
                        else
                        {
                            @: -
                        }
                    </td>
                    <td>@Html.ActionLink("Modifier", "Edit", new { id = item.Id }, new { @class = "btn btn-sm btn-warning" })</td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Pagination -->
    <nav aria-label="Pagination">
        <ul class="pagination justify-content-center">
            @for (var pageNum = 1; pageNum <= Math.Ceiling((decimal)Model.TotalCount / Model.PageSize); pageNum++)
            {
                var isActive = pageNum == Model.PageIndex ? "active" : "";
                <li class="page-item @isActive">
                    <a class="page-link" href="/rentals?pageNumber=@pageNum&pageSize=@Model.PageSize&q=@Model.SearchCriteria">@pageNum</a>
                </li>
            }
        </ul>
    </nav>
</div>
