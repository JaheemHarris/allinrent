@page
@model RazorAllinRent.Pages.Stocks.EditModel

@{
	ViewData["Title"] = "Ajout stock";
}

<style>
	.custom-field {
		display: flex;
		align-items: center;
		gap: 6px;
	}

	.form-control.custom-quantity-input {
		width: 75px;
		height: 42px;
	}

	.edit-actions {
		gap: 14px;
	}
</style>

<main id="main" class="main">
	<div class="pagetitle">
		<h1>Modifier Stock</h1>
		<nav>
			<ol class="breadcrumb">
				<li class="breadcrumb-item">Stock</li>
				<li class="breadcrumb-item active">Modifier</li>
			</ol>
		</nav>
	</div>
	<!-- End Page Title -->
	<section class="section">
		<div class="row justify-content-center">
			<div class="col-lg-12">
				<div class="card">
					<div class="card-body">
						<h5 class="card-title">Modifier le stock de l' article</h5>
						<!-- Horizontal Form -->
						<div class="row justify-content-center">
							<form class="col-5" method="POST">
								<div asp-validation-summary="ModelOnly" class="text-danger"></div>
								<input type="text" asp-for="StockUpdateDto.ItemId" value="@Model.Item.Id" hidden />
								<div class="d-flex justify-content-between mt-3 mb-3">
									<span>Article</span>
									<span>@Model.Item.Name</span>
								</div>
								<div class="d-flex justify-content-between mt-3 mb-3">
									<span>En stock</span>
									<span id="current-stock">@Model.StockStatusDto.Quantity</span>
								</div>
								<div class="d-flex justify-content-between mt-3 mb-3">
									<span>Quantité modifié</span>
									<span id="modified-stock">@Model.StockStatusDto.Quantity</span>
								</div>
								<div class="d-flex align-center justify-content-between">
									<div>
										<label class="control-label">Rajouter ou enlever</label>
										<span asp-validation-for="StockUpdateDto.Quantity" class="text-danger"></span>
									</div>
									<div class="d-flex align-center custom-field">
										<button type="button" class="btn btn btn-outline-primary" id="btn-minus"><i class="bi bi-dash-lg"></i></button>
										<input type="number" id="quantity-input" asp-for="StockUpdateDto.Quantity" class="form-control custom-quantity-input ml-4 mr-4" />
										<button type="button" class="btn btn btn-outline-primary" id="btn-plus"><i class="bi bi-plus-lg"></i></button>
									</div>
									
								</div>
								<div class="d-flex align-center justify-content-center edit-actions mt-4">
									<button type="reset" class="btn btn-secondary ml-4 mr-4">Annuler</button>
									<button type="submit" class="btn btn-primary ml-4 mr-4">Valider</button>
								</div>
							</form>
						</div>
					</div>
				</div>
			</div>
		</div>
	</section>
</main>

<script>
	document.addEventListener("DOMContentLoaded", () => {
		const btnMinus = document.getElementById("btn-minus");
		const btnPlus = document.getElementById("btn-plus");
		const quantityInput = document.getElementById("quantity-input");
		const currentStock = document.getElementById("current-stock");
		const modifiedStock = document.getElementById("modified-stock");
		const currentStockQty = parseInt(currentStock.innerText, 10);
		const modifiedStockQty = parseInt(modifiedStock.innerText, 10);

		btnMinus.addEventListener("click", () => {
			let currentValue = parseInt(quantityInput.value, 10) || 0;
			if ((currentStockQty + currentValue) > 0) {
				quantityInput.value = currentValue - 1;
				modifiedStock.innerText = `${currentStockQty + (currentValue - 1)} \t (${currentValue - 1})`;
			}
			if (currentValue - 1 < 0) {
				modifiedStock.classList.remove("text-success");
				modifiedStock.classList.add("text-danger");
			} else if (currentValue - 1 == 0) {
				modifiedStock.classList.remove("text-success", "text-danger");
			}
		});

		btnPlus.addEventListener("click", () => {
			let currentValue = parseInt(quantityInput.value, 10) || 0;
			quantityInput.value = currentValue + 1;
			modifiedStock.innerText = `${currentStockQty + (currentValue + 1)} \t (+${currentValue + 1})`;

			if (currentValue + 1 > 0) {
				modifiedStock.classList.remove("text-danger");
				modifiedStock.classList.add("text-success");
			} else if(currentValue + 1 == 0) {
				modifiedStock.classList.remove("text-success", "text-danger");
			}
		});
	});
</script>

@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
}
